networks:
  my_network:
    driver: bridge
volumes:
  docker-volumes:

# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  
  redis-commander:
    container_name: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    ports:
      - '8081:8081'
    environment:
    - REDIS_HOSTS=local:redis_container:6379
  
  # mongodb:
  #   container_name: mongodb_container
  #   image: mongo:jammy
  #   restart: always
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./docker-volumes/data:/data/db
  
  mysql:
    # container_name: mysql_container
    image: mysql:8.0.36-bullseye
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=mpc
      - MYSQL_DATABASE=mpc
      - MYSQL_ROOT_PASSWORD=mpc
      - MYSQL_PASSWORD=mpc
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
      # - ./sql-scripts:/docker-entrypoint-initdb.d
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./init.sql:/data/application/init.sql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # command: --default-authentication-plugin=mysql_native_password --init-file ./init.sql
  
  # postgres:
  #   container_name: postgres_container
  #   image: postgres:12.17-bullseye
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=mpc
  #     - POSTGRES_PASSWORD=mpc
  #     - POSTGRES_DB=mpc
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - ./docker-volumes/postgres:/var/lib/postgresql
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=mpc
      - RABBITMQ_DEFAULT_PASS=mpc
    ports:
      # AMQP protocol port
      - '5672:5672'
      # Management UI
      - '15672:15672'

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      # ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - my_network
  
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    ports:
      - 5601:5601
    networks:
      - my_network
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  # alert:
  #   container_name: alert_container
  #   build:
  #     context: ./services/alert/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 3001:3001
  #   env_file: ./services/alert/.env
  #   environment:
  #     - ENABLE_APM=0
  #     - NODE_ENV=development
  #     - CLIENT_URL=http://localhost:3000
  #     - RABBITMQ_ENDPOINT=amqp://mpc:mpc@rabbitmq:5672
  #     - ELASTIC_SEARCH_URL=http://elasticsearch:9200
  #     - ELASTIC_APM_SERVER_URL=http://localhost:8200
  #     - ELASTIC_APM_SECRET_TOKEN=
  #   depends_on:
  #     - elasticsearch
    # networks:
    #   - my_network

  # a1:
  #   container_name: alert_container
  #   build:
  #     context: ./services/alert/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 3001:3001
  #   env_file: ./services/alert/.env
  #   environment:
  #     - ENABLE_APM=0
  #     - NODE_ENV=development
  #     - CLIENT_URL=http://localhost:3000
  #     - RABBITMQ_ENDPOINT=amqp://mpc:mpc@rabbitmq:5672
  #     - ELASTIC_SEARCH_URL=http://elasticsearch:9200
  #     - ELASTIC_APM_SERVER_URL=http://localhost:8200
  #     - ELASTIC_APM_SECRET_TOKEN=
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - my_network

  # gateway:
  #   container_name: gateway_container
  #   build:
  #     context: ./services/gateway/
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   env_file: ./services/gateway/.env
  #   environment:
  #     - ENABLE_APM=0
  #     - NODE_ENV=development
  #     - CLIENT_URL=http://localhost:3000
  #     - RABBITMQ_ENDPOINT=amqp://mpc:mpc@rabbitmq:5672
  #     - ELASTIC_SEARCH_URL=http://elasticsearch:9200
  #     - ELASTIC_APM_SERVER_URL=http://localhost:8200
  #     - ELASTIC_APM_SECRET_TOKEN=
  #     - GATEWAY_JWT_TOKEN=secret
  #     - JWT_TOKEN=secret
  #     - SECRET_KEY_ONE=secret
  #     - SECRET_KEY_TWO=secret
  #     - AUTH_BASE_URL=http://localhost:3002
  #     - USERS_BASE_URL=http://localhost:3003
  #     - ITEM_BASE_URL=http://localhost:3004
  #     - MSG_BASE_URL=http://localhost:3005
  #     - ITEM_BASE_URL=http://localhost:3006
  #     - ANALYSYS_BASE_URL=http://localhost:3007
  #     - REDIS_HOST=redis://redis_container:6379
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - my_network

